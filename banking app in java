import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        // Adding clients to a list
        List<Client> clients = new ArrayList<>();
        clients.add(new Client("123456", "Anna"));
        clients.add(new Client("987654", "Oskar"));
        clients.add(new Client("456123", "Jenifer"));

        // Adding accounts to clients
        clients.get(0).addAccount(new Account("EE654987564321", "EUR", 1000.0));
        clients.get(0).addAccount(new Account("JP582147859635", "JPY", 25000.30));
        clients.get(0).addAccount(new Account("US654987643214", "USD"));
        clients.get(1).addAccount(new Account("PL849512635445", "PLN", 47800.00));
        clients.get(2).addAccount(new Account("SE741254956587", "SEK", 200.18));

        // Making some transactions
        clients.get(0).getAccounts().get(0).makeDeposit(1200, "Salary");
        clients.get(0).getAccounts().get(0).makeWithdrawal(50, "Grocery");
        clients.get(0).getAccounts().get(0).makeWithdrawal(140, "Clothes");
        clients.get(0).getAccounts().get(0).makeWithdrawal(20, "Dinner");

        // Printing some data
        System.out.println("We have " + Client.getNumberOfClients() + " clients in our bank:");
        for (Client client : clients) {
            System.out.println("Client " + client.getName() + " has the following accounts:");
            for (Account account : client.getAccounts()) {
                System.out.println("    " + account.getNumber() + " (" + account.getCurrency() + ") " + account.getBalance());
                for (Transaction transaction : account.getTransactions()) {
                    System.out.println("        " + transaction.getTimeStamp() + " " + transaction.getCurrency() + " " + transaction.getAmount());
                }
            }
        }
    }
}


import java.time.LocalDateTime;

public class Transaction {
    private String currency;
    private double amount;
    private String note;
    private LocalDateTime timeStamp;

    public Transaction(String currency, double amount, String note) {
        this.currency = currency;
        this.amount = amount;
        this.note = note;
        this.timeStamp = LocalDateTime.now();
    }

    public String getCurrency() {
        return currency;
    }

    public double getAmount() {
        return amount;
    }

    public LocalDateTime getTimeStamp() {
        return timeStamp;
    }
}



import java.util.ArrayList;
import java.util.List;

public class Account {
    private String number;
    private String currency;
    private double balance;
    private List<Transaction> transactions;

    public Account(String number, String currency) {
        this(number, currency, 0.0);
    }

    public Account(String number, String currency, double balance) {
        this.number = number;
        this.currency = currency;
        this.balance = balance;
        this.transactions = new ArrayList<>();
    }

    public void makeDeposit(double amount, String note) {
        transactions.add(new Transaction(currency, amount, note));
        balance += amount;
    }

    public void makeWithdrawal(double amount, String note) {
        transactions.add(new Transaction(currency, -amount, note));
        balance -= amount;
    }

    public String getNumber() {
        return number;
    }

    public String getCurrency() {
        return currency;
    }

    public double getBalance() {
        return balance;
    }

    public List<Transaction> getTransactions() {
        return transactions;
    }
}



import java.util.ArrayList;
import java.util.List;

public class Client {
    private static int numberOfClients = 0;
    private String id;
    private String name;
    private List<Account> accounts;

    public Client(String id, String name) {
        this.id = id;
        this.name = name;
        this.accounts = new ArrayList<>();
        numberOfClients++;
    }
    
    public void addAccount(Account account) {
        accounts.add(account);
    }

    public String getName() {
        return name;
    }

    public List<Account> getAccounts() {
        return accounts;
    }

    public static int getNumberOfClients() {
        return numberOfClients;
    }
}
