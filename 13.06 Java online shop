
import java.util.Scanner;
public class Main {
    private static Scanner scanner = new Scanner(System.in);
    private static ItemService itemService = new ItemService();
    private static Shop shop = new Shop();
    public static void main(String[] args) {
        while(true){
            System.out.println("Press 1, to add an item");
            System.out.println("Press 2, to print all items");
            System.out.println("Press 3, to remove item by ID");
            System.out.println("Press 4, to update item name or cost");
            System.out.println("Press 5, to add item to cart");
            System.out.println("Press 6, to enter a checkout");
            System.out.println("Press 7, to exit a shop");
            int action = scanner.nextInt();
            //If the user chooses 1, then we call addItem();
            if (action == 1){
                addItem();
            } else if (action == 2){
                printItems();
            } else if (action == 3){
                removeItem();
            } else if (action == 4){
                updateItem();
            } else if (action == 5){
                addToCart();
            } else if (action == 6){
                checkOut();
            } else if (action == 7){
                break;
            } else {
                System.out.println("Invalid input");
            }
        }
        //If the user chooses 2, then we call printItems();

       //If the user chooses 3, then we call remove item
        //If the user chooses 4, then we call update item

        //Create a function that remove items
        //Create a function that update items

    }

    public static void addItem(){
        System.out.println("Provide an item id"); 
        int id = scanner.nextInt();
        System.out.println("Provide an item name");
        String name = scanner.next();
        System.out.println("Provide an item cost");
        int cost = scanner.nextInt();
        var item = new Item(id, name, cost);
        itemService.addItem(item);
    }

    public static void printItems(){
        System.out.println("These are the items in the storage");
        var items = itemService.getItems();
        for (var item : items){
            System.out.println(item.getId() + item.getName() + item.getCost());
        }
    }
    public static void removeItem(){
        System.out.println("Enter the id of the item you want to remove");
        int id = scanner.nextInt();
        scanner.nextLine();
        itemService.removeItem(id);
    }
    public static void updateItem(){
        System.out.println("Enter the id of the item you want to update");
        int id = scanner.nextInt();
        scanner.nextLine();
        System.out.println("Enter the new name of the item");
        String name = scanner.next();
        System.out.println("Enter the new cost of the item");
        int cost = scanner.nextInt();
        itemService.updateItem(id, name, cost);
    }
    public static void addToCart(){
        System.out.println("Enter the name of the item you want to add to cart");
        String name = scanner.next();
        for (Item item : itemService.getItems()){
            if(item.getName().equals(name)){
                shop.addItemToCart(item);
                System.out.println("item addedd to cart");
                return;
            }
        }
        System.out.println("Item is not available");       
    }
    public static void checkOut(){
        System.out.println("The total cost of the items in the cart is " + shop.checkout());
    }
}


//description of items
public class Item{
  private int id;
  private String name;
  private int cost;

  public Item(int id, String name, int cost){
    this.id = id;
    this.name = name;
    this.cost = cost;
  }

  public int getId(){
    return id;
  }

  public void setName(String name){
    this.name = name;
  }

  public String getName(){
    return name;
  }

  public void setCost(int cost){
    // Check whether or not the user is a cashier, and if it is, then allow to change the cost.
    this.cost = cost;
  }

  public int getCost(){
    return cost;
  }
}


//shop + ItemManager in one, usually not together
//shop- add item to cart, remove item, get the current total price of total, chech weather or not an item is available
//itemmanager- a list of items, add items/remove items, update items, checout(get all the item in the cart and show the total price)
//customer
//contains add/remove/get items from cart
import java.util.ArrayList;


public class Shop {
  private ArrayList<Item> cart = new ArrayList<Item>();
  //Item service functionality in different class
  // adding items
  // remove items
  // update items
  // get items

  // Shop functionality
  // AddItemToCart -> done
  // Get the items list -> done
  // RemoveItemFromCart -> future
  // Checkout (get the totalPrice)
  

  public void addItemToCart(Item item) {
    // items list, it would contain the amount of available items
    // Before we add item to the cart, we would check whether or not it is available
    cart.add(item);
  }

  public int checkout() { // get the total cost
    int sum = 0;
    for (var item : cart) {
      sum += item.getCost();
    }
    return sum;
  }

}



//CRUD
//Create/Read/Update/Delete
//admin/shopmanager using this class
//contains add/remove/update/get items
import java.util.ArrayList;
public class ItemService{
  // ItemService.java
  private ArrayList<Item> items = new ArrayList<Item>();
  

  // ItemService.java
  public ArrayList<Item> getItems() {
    return items;
  }

  // ItemService.java
  public void addItem(Item item) {
    items.add(item);
  }

  // ItemService.java
  public void removeItem(int id) {
    for (var item : items) {
      if (item.getId() == id) {
        items.remove(item);
        return;
      }
    }
  }

  // ItemService.java
  public void updateItem(int id, String name, int cost) {
    for (var item : items) {
      if (item.getId() == id) {
        item.setName(name);
        item.setCost(cost);
        return;
      }
    }
  }
}
